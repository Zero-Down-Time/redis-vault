version: '3.8'

services:
  redis-master:
    image: redis:8-alpine
    command: redis-server --save 60 1 --loglevel warning
    volumes:
      - redis-data:/data
    networks:
      - redis-net
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  redis-vault:
    build: ..
    environment:
      # Redis configuration
      REDIS_CONNECTION: "redis://redis-master:6379"
      REDIS_DATA_PATH: "/data"
      REDIS_NODE_NAME: "redis-master-01"
      BACKUP_MASTER: "true"
      BACKUP_REPLICA: "false"
      
      # Backup configuration
      BACKUP_INTERVAL: "1h"
      DUMP_FILENAME: "dump.rdb"
      
      # S3 Storage configuration
      STORAGE_TYPE: "s3"
      S3_BUCKET: "my-redis-vault"
      S3_PREFIX: "docker/redis-vault"
      AWS_REGION: "us-west-2"
      
      # AWS credentials (use IAM roles in production)
      AWS_ACCESS_KEY_ID: "${AWS_ACCESS_KEY_ID}"
      AWS_SECRET_ACCESS_KEY: "${AWS_SECRET_ACCESS_KEY}"
      
      # Retention configuration
      RETENTION_KEEP_LAST: "7"
      RETENTION_KEEP_DURATION: "30d"
      
      # Logging
      RUST_LOG: "info"
    
    volumes:
      - redis-data:/data:ro  # Read-only access to Redis data
    
    depends_on:
      redis-master:
        condition: service_healthy
    
    networks:
      - redis-net
    
    restart: unless-stopped

  # Example Redis replica with its own backup sidecar
  redis-replica:
    image: redis:8-alpine
    command: redis-server --replicaof redis-master 6379 --save 60 1
    volumes:
      - redis-replica-data:/data
    networks:
      - redis-net
    depends_on:
      - redis-master

  redis-replica-vault:
    build: ..
    environment:
      REDIS_CONNECTION: "redis://redis-replica:6379"
      REDIS_DATA_PATH: "/data"
      REDIS_NODE_NAME: "redis-replica-01"
      BACKUP_MASTER: "false"
      BACKUP_REPLICA: "true"  # Only backup if replica
      BACKUP_INTERVAL: "2h"    # Different interval for replicas
      DUMP_FILENAME: "dump.rdb"
      STORAGE_TYPE: "s3"
      S3_BUCKET: "my-redis-vault"
      S3_PREFIX: "docker/redis-vault"
      AWS_REGION: "us-west-2"
      AWS_ACCESS_KEY_ID: "${AWS_ACCESS_KEY_ID}"
      AWS_SECRET_ACCESS_KEY: "${AWS_SECRET_ACCESS_KEY}"
      RETENTION_KEEP_LAST: "5"
      RETENTION_KEEP_DURATION: "7d"
      RUST_LOG: "info"
    volumes:
      - redis-replica-data:/data:ro
    depends_on:
      - redis-replica
    networks:
      - redis-net
    restart: unless-stopped

volumes:
  redis-data:
  redis-replica-data:

networks:
  redis-net:
    driver: bridge
